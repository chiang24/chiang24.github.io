<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chiang&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-28T08:26:46.735Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>maxchiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何自定义简单命令（一）—alias、function</title>
    <link href="http://yoursite.com/2017/02/28/%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94alias%E3%80%81function/"/>
    <id>http://yoursite.com/2017/02/28/如何自定义简单命令（一）—alias、function/</id>
    <published>2017-02-28T08:15:46.000Z</published>
    <updated>2017-02-28T08:26:46.735Z</updated>
    
    <content type="html"><![CDATA[<p>学完bash和vim，可以开始一些命令新玩法了。</p>
<ul>
<li>function不用介绍了，就是函数。</li>
<li>[<a href="https://zh.wikipedia.org/wiki/Alias" target="_blank" rel="external">alias</a>]是许多命令行界面的命令。也就是用自定义字符串替换指定命令的功能，通常用于简写系统命令。</li>
</ul>
<h4 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h4><hr>
<ol>
<li>我们可以在<code>~/.bashrc</code>里添加alias</li>
</ol>
<ul>
<li><code>~/.bashrc</code>是什么呢</li>
</ul>
<p>就是一个文件，bash 会在启动时运行 ~/.bashrc 里面的内容，我们可以自定义bashrc文件内容。</p>
<ul>
<li><code>rc</code> 是配置文件的意思</li>
</ul>
<ol>
<li>添加alias<br>在任何一个编辑器里打开bashrc文件，这里我们用vim，在vim里给bashrc加入一行<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">alias xxx=<span class="string">'yyy'</span>   ---xxx随便定义一个名字，yyy是xxx对应的字符串，命令</div><div class="line">例如:</div><div class="line">alias f=<span class="string">'find f. -name'</span>   --在当前目录里查找名字叫xxx的文件</div></pre></td></tr></table></figure>
</li>
</ol>
<p>写好后，f就被赋予了特殊的意义，保存退出重启</p>
<ol>
<li>运行</li>
</ol>
<p>在bash里输入<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">source ~/.bashrc          --或者xxx  ‘yyy’ </div><div class="line">f 'chiang'                --例子</div></pre></td></tr></table></figure></p>
<h4 id="function"><a href="#function" class="headerlink" title="function"></a>function</h4><hr>
<ol>
<li><p>同样在vim里编辑~/.bashrc</p>
</li>
<li><p>自定义function</p>
</li>
</ol>
<ul>
<li>举例<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fd () &#123;</div><div class="line">local d          --声明一个变量</div><div class="line">d=$(find . -type d -name $<span class="number">1</span>)    -- 查找name为$<span class="number">1</span>的目录，然后返回这个目录给d。$<span class="number">1</span>是第一个参数，这是bash语法规定的，没有为社么</div><div class="line">cd <span class="string">"$d"</span>             --进入这个目录</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ol>
<li>在bash里输入</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">source ~/.bashrc          ---或者xxx（函数名）  ‘yyy（参数）’ </div><div class="line">fd 'chiang'                       --例子</div></pre></td></tr></table></figure>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><hr>
<ul>
<li>bash语法很奇怪，需要强行记忆</li>
<li>alias和function可以把一些复杂的命令变得简单，学会a它们可以更加高效的使用命令行</li>
</ul>
<h4 id="分享一个z文件"><a href="#分享一个z文件" class="headerlink" title="分享一个z文件"></a>分享一个z文件</h4><hr>
<p><code>z</code>文件就是一个会记住曾经到过的目录的文件,有了它可以直接使用z. xxx(文件名)，到达你去过的目录</p>
<ol>
<li>下载<a href="https://github.com/rupa/z" target="_blank" rel="external">[z.sh]</a>，放到一个不会删除的目录下</li>
<li>在 ~/.bashrc 里面加入z.sh的路径<br>source /path/to/z.sh   </li>
<li>运行 source ~/.bashrc</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学完bash和vim，可以开始一些命令新玩法了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;function不用介绍了，就是函数。&lt;/li&gt;
&lt;li&gt;[&lt;a href=&quot;https://zh.wikipedia.org/wiki/Alias&quot; target=&quot;_blank&quot; rel=&quot;ex
    
    </summary>
    
    
      <category term="学习心得" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>据说是人类史上最好的文本编辑器——VIM</title>
    <link href="http://yoursite.com/2017/02/26/%E6%8D%AE%E8%AF%B4%E6%98%AF%E4%BA%BA%E7%B1%BB%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%A5%BD%E7%9A%84%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E2%80%94%E2%80%94VIM/"/>
    <id>http://yoursite.com/2017/02/26/据说是人类史上最好的文本编辑器——VIM/</id>
    <published>2017-02-26T12:25:38.056Z</published>
    <updated>2017-02-26T12:28:26.747Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个VIM初学者，vim给我的感觉就是命令多而且活，比bash还要难掌握。正所谓<em>”工欲善其事，必先利其器“</em>，且学习vim也是后期工程化的需要，所以它是必须跨过的大山，不会用命令的程序员不是好程序员。经过基础和进阶的学习我做了一些总结。</p>
<blockquote>
<p><em><a href="http://www.vim.org/" target="_blank" rel="external">Vim</a> the Six Billion Dollar editor</em><br><em>Better, Stronger, Faster</em></p>
</blockquote>
<p>传说中的学习vim四步骤：</p>
<blockquote>
<ul>
<li>存活</li>
<li>感觉良好</li>
<li>觉得更好，更强，更快</li>
<li>使用VIM的超能力 :)</li>
</ul>
</blockquote>
<h3 id="启动vim"><a href="#启动vim" class="headerlink" title="启动vim"></a>启动vim</h3><p>在命令行窗口输入：<br><code>vim</code> 进入vim<br><code>vim xxx</code> 打开vim并创建名为xxx的文件</p>
<h3 id="退出vim方式"><a href="#退出vim方式" class="headerlink" title="退出vim方式"></a>退出vim方式</h3><hr>
<ul>
<li><p>在插入模式下，先按ESE到normal模式：</p>
<ul>
<li><code>：wq</code>保存退出</li>
<li><code>:q</code>直接退出</li>
<li><code>!q</code>强制退出</li>
</ul>
</li>
<li><p>在normal模式下，直接按功能键：</p>
</li>
<li><code>X</code>仅仅保存</li>
<li><code>ZZ</code> 不需要输入：直接保存退出</li>
</ul>
<h3 id="vim的模式"><a href="#vim的模式" class="headerlink" title="vim的模式"></a>vim的模式</h3><hr>
<ul>
<li>输入<code>i</code>进入插入模式</li>
<li>按<code>ESE</code>退出当前模式，进入normal模式</li>
</ul>
<h3 id="移动命令"><a href="#移动命令" class="headerlink" title="移动命令"></a>移动命令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">H J K L   --左、下、上、右</div><div class="line">G    --跳转到最后一行</div><div class="line">50G --移动到50行</div><div class="line">gg   --跳转到第一行</div><div class="line">w    --跳转到下一个单词开头</div><div class="line">e     --下一个单词结尾</div><div class="line">0     --数字0，到行头</div><div class="line">$     --到行尾</div><div class="line">^      --到第一个不是blank字符的位置（所谓blank就是指tab、空格、换行、回车等）</div><div class="line">g     --到本行最后一个不是blank字符的位置</div></pre></td></tr></table></figure>
<h3 id="编辑命令"><a href="#编辑命令" class="headerlink" title="编辑命令"></a>编辑命令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">i    --在光标前插入文本</div><div class="line">A   --在一行后添加文本</div><div class="line">dw  --从光标处删除到下一个单词起始处，不包括第一个字符</div><div class="line">de   --从当前位置到单词末尾，包括最后一个字符</div><div class="line">dd   --删除本行，在功能键前加数字可删除多行，例如：5dd 删除5行</div><div class="line">r      --替换当前位置的字符</div><div class="line">O     --在本行的上方插入新的一行</div><div class="line">o      --小写字母，在本行下方插入新的一行</div><div class="line">a       --在光标所在位置之后插入文本</div><div class="line">A       --在光标所在行位置之后插入文本</div><div class="line">y        --复制</div><div class="line">p        --粘贴，可搭配数字使用，例如3p表示粘贴文本3次</div></pre></td></tr></table></figure>
<h3 id="开挂命令"><a href="#开挂命令" class="headerlink" title="开挂命令"></a>开挂命令</h3><hr>
<ul>
<li><code>100iabc[ESE]</code>  界面会打出100个abc  </li>
<li><code>.</code>可重复上一次命令，例如100”abc“.表示重复再打100个abc</li>
<li><code>3.</code> 重复三次abc</li>
<li><code>ctrl-w</code>窗口调转</li>
<li><code>ctrl-D</code>查看可能补全的结果</li>
<li><code>Tab</code>使用当前补全</li>
<li><code>%</code> 匹配括号移动，包括（、{、[，需要先把光标移到括号上</li>
<li><code>ra</code> 将当前字符替换为a，当期字符即光标所在字符。</li>
<li><code>s/old/new/</code> 用old替换new，替换当前行的第一个匹配</li>
<li><code>s/old/new/g</code> 用old替换new，替换当前行的所有匹配</li>
<li><code>v</code>可视化选择，可搭配p、y命令实现自定义内容拷贝粘贴</li>
<li><code>gU</code>变大写</li>
<li><code>gu</code>变小写</li>
<li><code>:split或:new</code> 打开一个新窗口，光标停在顶层的窗口上</li>
<li><code>:split file或:new file</code> 用新窗口打开文件</li>
<li><code>split</code>打开的窗口都是横向的，使用<code>vsplit</code>可以纵向打开窗口。</li>
</ul>
<h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><hr>
<ul>
<li>注意大小写。有些命令是在normal下输入的，我们把它叫做功能键。有一些是在插入模式下输入的，所有带<code>:</code>的命令都在插入模式输入。注意区别。</li>
<li>上面是我学习的一些常用的命令，其中有些命令是可以搭配组合的，需要自己去尝试，可以在shell输入<code>vim tutor</code>，学习官方的文档。vim和bash一样都需要熟能生巧，学完这两个以后可以开始做很多事了。下一篇再来说说，我用它们做了一些什么有意思的事儿。</li>
<li>以上如果有什么错误，欢迎留言。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个VIM初学者，vim给我的感觉就是命令多而且活，比bash还要难掌握。正所谓&lt;em&gt;”工欲善其事，必先利其器“&lt;/em&gt;，且学习vim也是后期工程化的需要，所以它是必须跨过的大山，不会用命令的程序员不是好程序员。经过基础和进阶的学习我做了一些总结。&lt;/p&gt;
&lt;blo
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>拥抱命令行</title>
    <link href="http://yoursite.com/2017/02/26/%E6%8B%A5%E6%8A%B1%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://yoursite.com/2017/02/26/拥抱命令行/</id>
    <published>2017-02-26T12:14:51.639Z</published>
    <updated>2017-02-26T12:19:30.865Z</updated>
    
    <content type="html"><![CDATA[<p>由于我是windows操作系统，所以我用git bash来写命令。bash是一个命令处理器，用户可以在上面直接输入命令来执行各种任务。了解<a href="https://zh.wikipedia.org/wiki/bash" target="_blank" rel="external">[bash]</a>是什么之前先需要了解<a href="https://zh.wikipedia.org/wiki/Unix_shell" target="_blank" rel="external">[Unix shell]</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4740192-c8393ee9706f70bd.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git bash 界面.PNG"></p>
<h3 id="了解基本概念"><a href="#了解基本概念" class="headerlink" title="了解基本概念"></a>了解基本概念</h3><ul>
<li><code>/</code> 代表整个硬盘，叫根目录(<em>这是 Windows 特有的</em>)</li>
<li><code>~</code> 用户目录<br>  -在windows系统中，表示<code>/Users/administrator/</code>目录<br>  -在 Linux 系统，表示 <code>/home/administrator/</code> 目录 </li>
<li><code>./</code>代表当前目录</li>
<li><code>..</code>代表父目录(上一级目录)   </li>
<li>目录、路径、节点<br> 1.目录就是文件夹<br> 2.路径</li>
<li>绝对路径，以/开头，详细的描述了一个文件具体的位置。例如：<code>/c/Users/demos</code></li>
<li><p>相对路径，不以/开头，是一个相对值。 例如：<code>..C/users</code></p>
<p>3.节点=文件 or 目录</p>
</li>
</ul>
<h3 id="命令的格式"><a href="#命令的格式" class="headerlink" title="命令的格式"></a>命令的格式</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ 命令 -选项缩写 -选项 参数</div><div class="line">结果</div></pre></td></tr></table></figure>
<p><code>命令缩写的规则是省略A、E、I、O、U五个元音字母，留下两到三个字母（有时例外）</code></p>
<h3 id="目录与文件的基本操作"><a href="#目录与文件的基本操作" class="headerlink" title="目录与文件的基本操作"></a>目录与文件的基本操作</h3><hr>
<ol>
<li>创建目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir xxx(目录名）</div><div class="line">mkdir -p xxx（目录路径）   --一次性创建多层次目录，有需要加</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><p>创建文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch xxx    --文件名</div></pre></td></tr></table></figure>
</li>
<li><p>删除</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rm -r    --递归删除，将指定目录下的所有文件与子目录一并处理</div><div class="line">rm -f   --强制删除</div><div class="line">rm -rf   --强制逐个删除一个目录</div><div class="line">rm -i    --删除已有目录前先询问用户</div></pre></td></tr></table></figure>
</li>
<li><p>移动/重命名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mv 源 目标  --格式</div><div class="line">mv demos/helloworld ./   --把demos里的helloworld移动到当前目录</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>如果当前目录无目标文件则执行重命名，反之，执行移动。</code></p>
<ul>
<li><p>显示当前目录下的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls -l   --用长一点的形式显示</div><div class="line">ls -a   --显示所有文件</div><div class="line">ls -la   --用长一点的形式显示所有文件</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp xxx(文件) xxx（路径）  --这种只拷贝单个文件</div><div class="line">cp -r    --递归拷贝文件夹，包括下一级的子文件夹以此类推</div></pre></td></tr></table></figure>
</li>
<li><p>查看当前位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pwd</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd xxx(路径)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="其它常用命令"><a href="#其它常用命令" class="headerlink" title="其它常用命令"></a>其它常用命令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">clear   --清屏</div><div class="line">curl -l xxx   -- 访问url  ”-l“代表跟着跳转到页面，有需要加</div><div class="line">star   --用GUI(图形界面)打开某个文件</div></pre></td></tr></table></figure>
<h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">!!    --使用上一次命令</div><div class="line">xxx; yyy    --一句话执行两个命令</div><div class="line">xxx&amp;&amp; yyy  --同上</div></pre></td></tr></table></figure>
<h3 id="更多命令"><a href="#更多命令" class="headerlink" title="更多命令"></a>更多命令</h3><hr>
<ul>
<li>在mac里：<code>man ls</code></li>
<li>在windows里：<code>ls --help</code></li>
</ul>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><hr>
<p>1.不要漏打任何一个字符，包括空格<br>2.windows用户最好在~目录下玩儿<br>3.熟能生巧s<br>4.作者是一个命令行初学者，以上如果有不正确的地方，欢迎留言纠错。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于我是windows操作系统，所以我用git bash来写命令。bash是一个命令处理器，用户可以在上面直接输入命令来执行各种任务。了解&lt;a href=&quot;https://zh.wikipedia.org/wiki/bash&quot; target=&quot;_blank&quot; rel=&quot;ex
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从 URL 输入到页面展现发生了什么</title>
    <link href="http://yoursite.com/2017/02/26/%E4%BB%8E%20URL%20%E8%BE%93%E5%85%A5%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%8E%B0%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/"/>
    <id>http://yoursite.com/2017/02/26/从 URL 输入到页面展现发生了什么/</id>
    <published>2017-02-26T11:53:12.237Z</published>
    <updated>2017-02-26T11:57:27.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步：在浏览器输入URL"><a href="#第一步：在浏览器输入URL" class="headerlink" title="第一步：在浏览器输入URL"></a>第一步：在浏览器输入URL</h2><hr>
<ul>
<li>URL（Uniform Resource Locator）：统一资源定位符</li>
<li>http、https、ftp、file协议</li>
</ul>
<h2 id="第二步：域名解析"><a href="#第二步：域名解析" class="headerlink" title="第二步：域名解析"></a>第二步：域名解析</h2><hr>
<p>域名解析就是域名到IP地址的转换过程。域名的解析工作由DNS服务器完成 。</p>
<p><strong><em>域名解析流程</em></strong></p>
<ol>
<li>浏览器缓存 - 浏览器会缓存DNS一段时间</li>
<li>系统缓存 - 从Hosts文件查找是否有该域名对应的IP</li>
<li>路由器缓存 - 一般路由器也会缓存域名信息</li>
<li>ISP（服务商） DNS缓存 - 比如到电信的DNS上查找缓存</li>
<li>如果都没有找到，则向根域名服务器查找域名对应IP，根域名服务器把请求转达到下一级，直到找到IP。</li>
</ol>
<p>备注：DNS劫持说白了就是你输入了一个域名地址返回给你一个假网站，这种劫持可出现在域名解析过程中任一环节。 eg：输入百度打开淘宝</p>
<h2 id="第三步：服务器解析"><a href="#第三步：服务器解析" class="headerlink" title="第三步：服务器解析"></a>第三步：服务器解析</h2><hr>
<ul>
<li>web sever：系统里安装的处理请求的应用</li>
<li>常见的web服务器：Apache、Nginx、IIS、Lighttpd</li>
<li>web服务器作用：接收用户的request发送代码给网站，或者接收请求反向代理到其它web服务器</li>
</ul>
<h2 id="第四步：网站处理流程"><a href="#第四步：网站处理流程" class="headerlink" title="第四步：网站处理流程"></a>第四步：网站处理流程</h2><hr>
<ul>
<li>MVC： 模型(model)-视图(view)-控制器(controller)</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4740192-dfc84c154f543818.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mvc.png"></p>
<h2 id="第五步：浏览器处理"><a href="#第五步：浏览器处理" class="headerlink" title="第五步：浏览器处理"></a>第五步：浏览器处理</h2><hr>
<ol>
<li>HTML字符串被浏览器接收后读取解析</li>
<li>解析到link、href标签时重新发送请求获取css</li>
<li>解析到 script标签后发送请求获取 js，并执行代码</li>
<li>解析到img 标签后发送请求获取图片资源</li>
</ol>
<h2 id="第六步：绘制网页"><a href="#第六步：绘制网页" class="headerlink" title="第六步：绘制网页"></a>第六步：绘制网页</h2><hr>
<ul>
<li>浏览器根据收到的HTML和CSS计算得到渲染树，js也会被执行。（长什么样子由css控制，内容由html控制）</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一步：在浏览器输入URL&quot;&gt;&lt;a href=&quot;#第一步：在浏览器输入URL&quot; class=&quot;headerlink&quot; title=&quot;第一步：在浏览器输入URL&quot;&gt;&lt;/a&gt;第一步：在浏览器输入URL&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;URL（Uniform Res
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/02/26/hello-world/"/>
    <id>http://yoursite.com/2017/02/26/hello-world/</id>
    <published>2017-02-26T09:30:12.014Z</published>
    <updated>2017-02-26T09:30:12.027Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
